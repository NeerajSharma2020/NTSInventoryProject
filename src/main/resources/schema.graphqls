scalar LocalDateTime
schema {
    query: Query
    mutation: Mutation
}

type CustomerNote {
    id:Long
    customerId: Long
    createDate: DateTime
    createdById: Long
    text:String
}

input CustomerInput{
companyName: [String]
    addressLine1: String
    addressLine2: String
    city: String
    state: String
    zip: String
}

type Product{
productId:Int
factory:Factory
category:ProductCategory
subCategory:ProductSubCategory
partNumber:String
description:String
formatType:FormatType
indUPC:String
caseUPC:String
ean:String
alternateEAN:String
uom:String
status:Status
basePrice:BigDecimal
cost:BigDecimal
priceBy:PriceBy
listPrice:Int
minOrderQty:Int
commissionRate:Float
imageURL:String
}

type Factory{
id:Int
}
type ProductCategory{
id:Int
title:String
}

type ProductSubCategory{
id:Int
title:String
}

type FormatType{
id:Int
title:String
}

type PriceBy{
id:Int
title:String
}

type Status{
id:Int
title:String
}

input ProductInput{
productId:Int
factory:FactoryInput
category:ProductCategoryInput!
subCategory:ProductSubCategoryInput
partNumber:String
description:String
formatType:FormatTypeInput
indUPC:String
caseUPC:String
ean:String
alternateEAN:String
uom:String
status:StatusInput
basePrice:BigDecimal
cost:BigDecimal
priceBy:PriceByInput
listPrice:Int
minOrderQty:Int
commissionRate:Float
imageURL:String
}

input FactoryInput{
id:Int
}
input ProductCategoryInput{
id:Int
title:String
}

input ProductSubCategoryInput{
id:Int
title:String
}

input FormatTypeInput{
id:Int
title:String
}

input PriceByInput{
id:Int
title:String
}

input StatusInput{
id:Int
title:String
}


type Invoice{
    invoiceId:Int!
    createDate: LocalDateTime
    dueDate:LocalDateTime
    invoiceNumber: String
    status: String
    factSONumber: String
    proNumber: String
    notes:String
    invoiceAmount:Float
    commissionPercentage:Float
    commissionAmount:Float
    invoiceDetails:[InvoiceDetails]
}

type InvoiceDetails{
  invoiceDetailId:Int!
  invoice:Invoice
  product:Product
}

input InvoiceInput {
    createDate: LocalDateTime!
    status: String
    factSONumber: String
    proNumber: String
    notes:String
    invoiceAmount:Float!
    commissionPercentage:Float!
}

input InvoiceDetailsInput{
  invoice:InvoiceInput
  product:ProductInput
}

input InvoiceUpdateInput{
invoiceId:Int!
createDate: LocalDateTime
dueDate:LocalDateTime
invoiceNumber: String
status: String
factSONumber: String
proNumber: String
notes:String
invoiceAmount:Float
commissionPercentage:Float
commissionAmount:Float
}

input InvoiceDetailsUpdateInput{
  invoiceDetailId:Int!
  invoice:InvoiceUpdateInput
  product:ProductInput
}

type Query {
   findProductById(id:Int!):Product
   findAllProducts:[Product]
   findAllInvoiceDetails:[InvoiceDetails]
   findInvoiceDetailsById(InvoiceDetailsID:Int!):InvoiceDetails
}

type Mutation {
    saveProduct(input:ProductInput):Product
    deleteProductById(id:Int!):String
    updateProductById(input:ProductInput):Product
    saveInvoiceDetails(invoiceDetailsInput:InvoiceDetailsInput,productId:Int!):InvoiceDetails
    deleteInvoiceDetailById(invoiceDetailsId:Int!):String
    updateInvoiceDetails(invoiceDetail:InvoiceDetailsUpdateInput):InvoiceDetails
 }


